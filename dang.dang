syscall(1, 1, "Hello, World!", 13);

# let greet:str = "Goodnight Tennessee"
# syscall 1 1 greet 19 end

fn exit (status:int) {
  syscall(60, status);
}

let code:int = 69 + 73* 06 / 78+23-5;
exit(code);

# fn strlen:int (s:str) {
#   let len:int = 0;
#   while @s + len != 0 {
#     len++;
#   }
#   return len;
# }

# let len:int = strlen <| greet
# syscall 1 1 greet len end
# 

# macro exit [ syscall 60 ] end
# exit 0 end
# 
# macro print [ syscall 1 1 ] end
# print greet 19 end
# 
# macro print [ syscall 1 1 $ $ end ] end
# print(greet,19)

# fn exit:null ( let status:int ) 
#   syscall 60 status end
# end
# 
# exit <| 0

# I support comments now
# let bye:int = 23 + 45 * 3 / 4

# fn print:null ( let s:str )
#   syscall 1 1 s strlen <| s end
# end

# print <| greet

# if cond1 && cond 2 then
#   print <| greet
# elif cond3 then
#   exit
# end
